#!/bin/bash

# Passed arguments
echo "arg1: $1 \ arg2: $2"
serversIP=$1
glusterVolumes=$2

# debug
# serversIP=",172.21.12.12,172.21.12.11"
# glusterVolumes="glusterfs-0,glusterfs-1"

OLDIFS=$IFS
IFS=','

# Probe for peers and prepare server statements 
bricks=''
r=0
n=0
read -ra ADDR <<< "$serversIP" # is read into an array as tokens separated by IFS
ADDR_LENTH=${#ADDR[@]}
for server in "${ADDR[@]}"; do
  ((r++))
  echo -e "Array ($r of $ADDR_LENTH)"
  if ! [[ $server =~ ^[[:space:]]*$ ]]; then
    echo -e "Server: $server"

    if [ $r -lt $ADDR_LENTH ]; then
      echo -e "Peering: $server"
      sudo gluster peer probe $server
    fi

    bricks="$bricks $server:/brick"
    ((n++))
  fi
done

sleep 5 

# Create a volume and start cluster
read -ra VOL <<< "$glusterVolumes" # is read into an array as tokens separated by IFS
VOL_LENTH=${#VOL[@]}
for volume in "${VOL[@]}"; do
  echo -e "Volume: $volume with bricks ($n): $bricks"

  command="gluster volume create $volume replica $n transport tcp $bricks force"
  eval $command
  sudo gluster volume start $volume
done

sudo gluster peer status
sudo gluster volume info
# sudo tail -f /var/log/glusterfs/glusterd.log

IFS=$OLDIFS

# Troubleshooting
# Manual/debug: sudo gluster volume create glusterfs-0 replica 2 transport tcp 172.21.12.12:/brick 172.21.12.11:/brick force
# HOST=172.21.12.12
# SELF=172.21.12.11
# gluster peer probe $HOST
# gluster --mode=script vol create blah $SELF:/bricks $HOST:/bricks force
# gluster --mode=script vol delete blah
# gluster peer detach $HOST
